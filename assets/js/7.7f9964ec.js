(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{204:function(t,e,i){"use strict";i.r(e);var s=i(0),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),i("ul",[i("li",[t._v("下载与安装 "),i("br"),t._v("\n下载地址："),i("a",{attrs:{href:"https://git-for-windows.github.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://git-for-windows.github.io"),i("OutboundLink")],1)]),t._v(" "),t._m(3)]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),i("p",[t._v("git init：把当前目录变成一个git仓库，并自动创建master分支")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),i("p",[t._v("Git有三大区：工作区、暂存区、版本库（如上图 ）")]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),i("ul",[i("li",[t._v("github(国外):"),i("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/"),i("OutboundLink")],1)]),t._v(" "),i("li",[t._v("coding(国内):"),i("a",{attrs:{href:"https://coding.net",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://coding.net"),i("OutboundLink")],1)])]),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),i("p",[t._v("同步本地与远程仓库")]),t._v(" "),t._m(23),t._v(" "),t._m(24),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),i("p",[t._v("一般来说每个Git项目中都需要一个“.gitignore”文件，这个文件的作用就是告诉Git哪些文件不需要添加到版本管理中。")]),t._v(" "),t._m(29),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),i("p",[t._v("首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；")]),t._v(" "),i("p",[t._v("那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；")]),t._v(" "),i("p",[t._v("你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。")]),t._v(" "),t._m(34)])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[this._v("#")]),this._v(" Git")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理\n"),e("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200315220053971.jpg",alt:"分布式版本控制系统"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"安装与配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装与配置"}},[this._v("#")]),this._v(" 安装与配置")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("li",[t._v("配置个人信息（名字与邮箱）"),i("br"),t._v("\n使用Git的第一件事就是设置你的名字和email,这些就是你在提交commit时的签名"),i("div",{staticClass:"language-bash extra-class"},[i("pre",{pre:!0,attrs:{class:"language-bash"}},[i("code",[i("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),i("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your Name"')]),t._v("\n"),i("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),i("span",{pre:!0,attrs:{class:"token string"}},[t._v('"email@example.com"')]),t._v("\n")])])]),i("blockquote",[i("p",[t._v("查看是否配置成功，用命名git config -l")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git的使用"}},[this._v("#")]),this._v(" git的使用")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"创建本地仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建本地仓库"}},[this._v("#")]),this._v(" 创建本地仓库")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("以上命令会在当前目录下创建了一个.git 隐藏目录，它就是所谓的Git 仓库。生成仓库后的目录就不是普通的文档目录了，我们将其称为工作区，所以工作区中都包含一个git仓库，而一个git仓库中又包含一个暂存区和一个版本库")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"工作区与版本库概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工作区与版本库概念"}},[this._v("#")]),this._v(" 工作区与版本库概念")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200315220338820.jpeg",alt:"工作区与版本库示意图"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("工作区（Working Directory）：电脑中的目录")]),this._v(" "),e("li",[this._v("仓库：工作区有一个隐藏目录.git，这个不算工作区，而是Git仓库。\n"),e("ul",[e("li",[this._v("暂存区（stage/index）：一个临时的存储区域")]),this._v(" "),e("li",[this._v("版本库 （Repository）")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"添加文件到版本库的步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加文件到版本库的步骤"}},[this._v("#")]),this._v(" 添加文件到版本库的步骤")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ol",[i("li",[t._v("创建（修改）文件 "),i("br"),t._v("\n往工作区中添加/修改文件")]),t._v(" "),i("li",[t._v("添加到暂存区："),i("code",[t._v("git add <file>")]),t._v(" "),i("br"),t._v("\n把修改存放到暂存区\n"),i("ul",[i("li",[i("code",[t._v("git add 文件夹")]),t._v("：把文件夹下的所有修改添加到暂存区")]),t._v(" "),i("li",[i("code",[t._v("git add")]),t._v(" .：添加所有修改到暂存区")])]),t._v(" "),i("blockquote",[i("p",[t._v("如果想过滤部分文件，请查看 "),i("a",{attrs:{href:"#git%E8%BF%87%E6%BB%A4%E9%85%8D%E7%BD%AE"}},[t._v("过滤清单")])])])]),t._v(" "),i("li",[t._v("提交到版本库："),i("code",[t._v('git commit -m "备注"')]),t._v(" "),i("br"),t._v("\n使用git commit 命令可将暂存区的内容提交至版本库中，这个过程称为提交，每一次提交都意味着版本在进行一次更新（会自动生成一个commit id）"),i("div",{staticClass:"tip custom-block"},[i("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),i("p",[t._v("如果不写-m回车会进入vim编辑界面，退出方法：")]),t._v(" "),i("ul",[i("li",[t._v("推出编辑状态：ESC")]),t._v(" "),i("li",[t._v("同时按下Shift和冒号（:），接着输入输入：q（退出不保存），wq（保存并退出）")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"其他辅助命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他辅助命令"}},[this._v("#")]),this._v(" 其他辅助命令")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("查看仓库变更状态："),e("code",[this._v("git status")]),this._v(" "),e("br"),this._v("\n用status查看仓库会有几种状态：untracked、unstaged、uncommitted")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200315220646631.png",alt:"仓库变更状态"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git远程仓库"}},[this._v("#")]),this._v(" git远程仓库")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"注册登录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注册登录"}},[this._v("#")]),this._v(" 注册登录")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"关联本地仓库与远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关联本地仓库与远程仓库"}},[this._v("#")]),this._v(" 关联本地仓库与远程仓库")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("有两种方式关联：ssh和https两种协议，https比较简单，但提交时每次都分输入用户名和密码，如使用https协议，直接跳过以下第1、第2步")])])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ol",[i("li",[t._v("创建SSH Key："),i("code",[t._v("ssh-keygen -t rsa -C 'email地址'")]),t._v(" "),i("br"),t._v("\n以上命令会在当前window用户的目录里创建.ssh目录，里面有id_rsa（私钥）和id_rsa.pub（公钥）两个文件")]),t._v(" "),i("li",[t._v("添加SSH Key到Git服务器 "),i("br"),t._v("\n添加完成后测试线路是否连通："),i("code",[t._v("ssh -T git@github.com")])]),t._v(" "),i("li",[t._v("建立本地仓库与远程仓库的连接\n"),i("ul",[i("li",[t._v("方式1：适用于先有本地仓库，后有远程仓库的情况 "),i("br"),t._v("\n格式："),i("code",[t._v("git remote add 远程仓库名 远程仓库地址")]),i("div",{staticClass:"language-bash extra-class"},[i("pre",{pre:!0,attrs:{class:"language-bash"}},[i("code",[i("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),i("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@github.com:xxx/view.git\n")])])]),i("blockquote",[i("p",[t._v("PS：删除远程仓库连接：git remote remove 远程仓库名")])])]),t._v(" "),i("li",[t._v("方式2：克隆（适用于先有远程库，后有本地仓库的情况）"),i("br"),t._v("\n格式："),i("code",[t._v("git clone 远程仓库地址")]),t._v(" "),i("blockquote",[i("p",[t._v("当你从远程仓库克隆时，实际上Git自动把本地的master分支和远程的master分支对应起来了，并且，远程仓库的默认名称是origin")])])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"推送到远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推送到远程仓库"}},[this._v("#")]),this._v(" 推送到远程仓库")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("git push "),e("br"),this._v("\n格式："),e("code",[this._v("git push 远程仓库名 本地分支名:远程分支名")]),this._v(" "),e("br"),this._v("\n把本地分支内容推送到远程分支（远程分支名省略表示推送到与本地分支相同的分支）"),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" push origin master\n")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"拉取与合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拉取与合并"}},[this._v("#")]),this._v(" 拉取与合并")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[t._v("git pull "),i("br"),t._v("\n格式："),i("code",[t._v("git pull 远程仓库名 远程分支名:本地分支名")]),t._v(" "),i("br"),t._v("\n拉取远程分支内容到本地并与本地分支进行合并（本地分支名省略表示合并到与远程分支名相同的分支）"),i("div",{staticClass:"language-bash extra-class"},[i("pre",{pre:!0,attrs:{class:"language-bash"}},[i("code",[i("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin master\n")])])])]),t._v(" "),i("li",[t._v("git fetch "),i("br"),t._v("\n拉取远程分支内容")]),t._v(" "),i("li",[t._v("git merge "),i("br"),t._v("\n合并分支内容")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" pull origin master\n\n//以上命令相当与以下命令\n"),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" fetch origin master\n"),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" merge origin/master\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("push和pull后的分支顺序格式：<来源地>:<目的地>")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"版本回退"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#版本回退"}},[this._v("#")]),this._v(" 版本回退")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[t._v("回退命令："),i("code",[t._v("git reset")]),t._v(" "),i("ul",[i("li",[t._v("回退到上一个版本 "),i("br"),t._v(" "),i("code",[t._v("git reset --hard HEAD^")])]),t._v(" "),i("li",[t._v("回退到指定版本： "),i("br"),t._v(" "),i("code",[t._v("git reset --hard [commit id]")]),t._v("版本号没必要写全，前几位就可以了，Git会自动去找。")]),t._v(" "),i("li",[t._v("回退指定文件 "),i("br"),t._v(" "),i("code",[t._v("git reset --hard [commit id] <file>")])]),t._v(" "),i("li",[t._v("参数说明\n"),i("ul",[i("li",[t._v("–hard:工作区、暂存区、版本库的文件同时回退")]),t._v(" "),i("li",[t._v("–mixed：暂存区、版本库的文件回退（默认）")]),t._v(" "),i("li",[t._v("–soft：仅仅回退版本库中的文件")])])])])]),t._v(" "),i("li",[t._v("版本表示 "),i("br"),t._v("\n当前版本：HEAD "),i("br"),t._v("\n上一个版本：HEAD^ "),i("br"),t._v("\n上上个版本：HEAD^^  "),i("br"),t._v("\n… 依此类推  "),i("br"),t._v("\n前100个版本：HEAD~100  "),i("br")]),t._v(" "),i("li",[t._v("显示从最近到最远的提交日志："),i("code",[t._v("git log")]),t._v(" "),i("ul",[i("li",[t._v("–pretty=oneline（显示简要信息id+备注）")]),t._v(" "),i("li",[t._v("–graph（图形显示版本走向）")]),t._v(" "),i("li",[t._v("–abbrev-commit（显示简写的id）")]),t._v(" "),i("li",[t._v("一大串类似3628164…882e1e0的是commit id（版本号）")])])]),t._v(" "),i("li",[t._v("查看命令历史："),i("code",[t._v("git reflog")])]),t._v(" "),i("li",[t._v("撤销文件修改\n"),i("ul",[i("li",[i("code",[t._v("git checkout -- <file>")]),t._v("：放弃工作区的修改")]),t._v(" "),i("li",[i("code",[t._v("git rm --cache <file>")]),t._v("：撤销暂存区的修改")]),t._v(" "),i("li",[i("code",[t._v("git reset HEAD <file>")]),t._v("：撤销暂存区的修改")])])]),t._v(" "),i("li",[t._v("对比文件："),i("code",[t._v("git diff <file>")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git过滤配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git过滤配置"}},[this._v("#")]),this._v(" git过滤配置")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("#过滤dist根目录下的文件（不过滤其他目录下的dist文件夹）\n/dist \n\n#过滤所有mtk文件夹\nmtk/ \n\n#过滤所有.zip文件\n*.zip \n\n#过滤某个具体文件\n/mtk/do.c \n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("#为注释")]),this._v(" "),e("li",[this._v("很简单吧，被过滤掉的文件就不会出现在你的GitHub库中了，当然本地库中还有，只是push的时候不会上传。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"分支操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支操作"}},[this._v("#")]),this._v(" 分支操作")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[t._v("创建分支："),i("code",[t._v("git branch 分支名")])]),t._v(" "),i("li",[t._v("切换分支："),i("code",[t._v("git checkout 分支名")]),t._v(" "),i("blockquote",[i("p",[t._v("以上两步合并为："),i("code",[t._v("git checkout -b 分支名")])])])]),t._v(" "),i("li",[t._v("查看分支："),i("code",[t._v("git branch")]),t._v(" "),i("br"),t._v("\n列出所有分支，当前分支前面会标一个*号")]),t._v(" "),i("li",[t._v("合并分支："),i("code",[t._v("git merge 分支名")]),t._v(" "),i("ul",[i("li",[i("code",[t._v("git merge dev")]),t._v("：把dev分支合并到当前分支")]),t._v(" "),i("li",[t._v("Fast-forward：快速合并 "),i("br"),t._v("\n禁用快速合并： –no-ff （保持分支信息）")])]),t._v(" "),i("blockquote",[i("p",[t._v("合并要创建一个新的commit，所以加上-m参数，把commit描述写进去")])])]),t._v(" "),i("li",[t._v("删除分支："),i("code",[t._v("git branch -d 分支名")]),t._v(" "),i("br"),t._v("\n强行删除，需要使用命令"),i("code",[t._v("git branch -D feature-vulcan")])]),t._v(" "),i("li",[t._v("获取远程分支\n"),i("ol",[i("li",[t._v("先获取 "),i("code",[t._v("git fetch")])]),t._v(" "),i("li",[t._v("然后在本地创建一个同名分支,并将远程分支映射到此分支 "),i("code",[t._v("git branch dev origin/dev")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("在实际开发中，我们应该按照几个基本原则进行分支管理：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("所以，团队合作的分支看起来就像这样：\n"),e("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200315224123259.png",alt:"工作分支示意图"}})])}],!1,null,null,null);e.default=r.exports}}]);