(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{216:function(t,e,v){"use strict";v.r(e);var _=v(0),l=Object(_.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("div",{staticClass:"content"},[v("h1",{attrs:{id:"dom"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" Dom")]),t._v(" "),v("h2",{attrs:{id:"什么是dom"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是dom"}},[t._v("#")]),t._v(" 什么是DOM")]),t._v(" "),v("p",[t._v("DOM是Document Object Model（文档对象模型）的缩写，它是W3C国际组织的一套Web标准。是针对HTML和XML文档的一个API，它定义了访问HTML文档对象的一套属性、方法和事件\n。\n"),v("img",{attrs:{src:"https://img-blog.csdnimg.cn/20200311222508607.png",alt:"DOM结构"}})]),t._v(" "),v("h2",{attrs:{id:"节点类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#节点类型"}},[t._v("#")]),t._v(" 节点类型")]),t._v(" "),v("ul",[v("li",[t._v("每个节点都有一个nodeType属性，用于表明节点的类型。")]),t._v(" "),v("li",[t._v("常用节点类型与对应nodeType值：\n"),v("blockquote",[v("p",[t._v("用于判断获取到的元素属于什么类型节点")])]),t._v(" "),v("ul",[v("li",[t._v("元素节点 <==> 1")]),t._v(" "),v("li",[t._v("文本节点 <==> 3")]),t._v(" "),v("li",[t._v("属性节点 <==> 2")])]),t._v(" "),v("div",{staticClass:"language-javascript extra-class"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//找出所有节点")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"content"')]),t._v(" title"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"属性节点"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("测试Div"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])])]),t._v(" "),v("h2",{attrs:{id:"节点获取"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#节点获取"}},[t._v("#")]),t._v(" 节点获取")]),t._v(" "),v("h3",{attrs:{id:"获取元素节点方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#获取元素节点方法"}},[t._v("#")]),t._v(" 获取元素节点方法")]),t._v(" "),v("ul",[v("li",[t._v("document.getElementById(id)\n"),v("ul",[v("li",[t._v("通过 ID获取元素的节点（速度最快）")]),t._v(" "),v("li",[t._v("必须通过document调用")]),t._v(" "),v("li",[t._v("返回DOM节点对象，如果id不存在返回null")])])]),t._v(" "),v("li",[t._v("getElementsByTagName(tagname)\n"),v("ul",[v("li",[t._v("通过标签名获取元素节点列表")]),t._v(" "),v("li",[t._v("返回类数组，如果tagname不存在返回空数组[]")])])]),t._v(" "),v("li",[t._v("getElementsByClassName()\n"),v("ul",[v("li",[t._v("通过class类名获取节点列表")]),t._v(" "),v("li",[t._v("返回类数组，如果类名不存在返回空数组[]")])])]),t._v(" "),v("li",[t._v("document.getElementsByName()\n"),v("ul",[v("li",[t._v("通过name属性获取元素节点列表")]),t._v(" "),v("li",[t._v("必须通过document调用")]),t._v(" "),v("li",[t._v("返回类数组，如果name属性不存在返回空数组[]")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("注意: 如果确认元素存在, 但是返回null或[]，一定是代码执行顺序的问题")])]),t._v(" "),v("h2",{attrs:{id:"节点操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#节点操作"}},[t._v("#")]),t._v(" 节点操作")]),t._v(" "),v("h3",{attrs:{id:"节点属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#节点属性"}},[t._v("#")]),t._v(" 节点属性")]),t._v(" "),v("ul",[v("li",[t._v("nodeName  返回节点的名称，根据其类型。")]),t._v(" "),v("li",[t._v("nodeType  返回节点的类型。")]),t._v(" "),v("li",[t._v("nodeValue 返回节点的值（元素节点的nodeValue为null）")])]),t._v(" "),v("h3",{attrs:{id:"节点方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#节点方法"}},[t._v("#")]),t._v(" 节点方法")]),t._v(" "),v("ul",[v("li",[t._v("创建：\n"),v("ul",[v("li",[t._v("document.createElement() 创建一个元素节点")]),t._v(" "),v("li",[t._v("document.createTextNode() 创建一个文本节点")]),t._v(" "),v("li",[t._v("document.createAttribute() 创建一个属性节点")])])]),t._v(" "),v("li",[t._v("插入：\n"),v("ul",[v("li",[t._v("parent.appendChild()  向节点的子节点列表的结尾添加新的子节点")]),t._v(" "),v("li",[t._v("parent.insertBefore(new,node) 在指定的子节点node前插入新的子节点new。")]),t._v(" "),v("li",[t._v("ele.setAttributeNode(attrNode) 在指定元素中插入一个属性节点")])]),t._v(" "),v("blockquote",[v("p",[t._v("对页面已存在节点的处理")])])]),t._v(" "),v("li",[t._v("复制\n"),v("ul",[v("li",[t._v("cloneNode(boolean)  复制节点，为true是深复制。")])])]),t._v(" "),v("li",[t._v("删除：\n"),v("ul",[v("li",[t._v("parent.removeChild(ele)  删除（并返回）当前节点parent的指定子节点ele。")])])]),t._v(" "),v("li",[t._v("判断：\n"),v("ul",[v("li",[t._v("parent.hasChildNodes() 判断当前节点是否拥有子节点,返回布尔值")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("以上parent表示父级元素，ele表示元素")])]),t._v(" "),v("h3",{attrs:{id:"利用节点关系获取其他节点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#利用节点关系获取其他节点"}},[t._v("#")]),t._v(" 利用节点关系获取其他节点")]),t._v(" "),v("ul",[v("li",[t._v("获取父级节点\n"),v("ul",[v("li",[t._v("ele.parentNode 得到ele元素的父节点")])])]),t._v(" "),v("li",[t._v("获取子节点\n"),v("ul",[v("li",[t._v("ele.childNodes 得到ele元素的全部子节点列表（类数组）")]),t._v(" "),v("li",[t._v("ele.firstChild 获得ele元素的第一个子节点")]),t._v(" "),v("li",[t._v("ele.lastChild 获得ele元素的最后一个子节点")])])]),t._v(" "),v("li",[t._v("获取兄弟节点\n"),v("ul",[v("li",[t._v("ele.nextSibling 获得ele元素的下一个兄弟节点")]),t._v(" "),v("li",[t._v("ele.previousSibling 得到ele元素的上一个兄弟节点")])])])]),t._v(" "),v("hr"),t._v(" "),v("p",[v("strong",[t._v("[练习]")])]),t._v(" "),v("ul",[v("li",[t._v("动态生成表格并实现隔行变色")]),t._v(" "),v("li",[t._v("封装一个删除非元素节点的函数")]),t._v(" "),v("li",[t._v("实现删除表格行效果")]),t._v(" "),v("li",[t._v("根据数据生成表单")])]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"元素节点的操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#元素节点的操作"}},[t._v("#")]),t._v(" 元素节点的操作")]),t._v(" "),v("h3",{attrs:{id:"常用属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常用属性"}},[t._v("#")]),t._v(" 常用属性")]),t._v(" "),v("blockquote",[v("p",[t._v("可以通过点语法或方括号访问")])]),t._v(" "),v("ul",[v("li",[t._v("tagName 获取元素的标签名")]),t._v(" "),v("li",[t._v("id 设置/获取元素id属性")]),t._v(" "),v("li",[t._v("name 设置/获取元素name属性")]),t._v(" "),v("li",[t._v("style 设置/获取元素的内联样式")]),t._v(" "),v("li",[t._v("className 设置/获取元素的class属性")]),t._v(" "),v("li",[t._v("innerHTML 设置/获取元素的内容（包含html代码）")]),t._v(" "),v("li",[t._v("outerHTML 设置或获取元素及其内容（包含html代码）")]),t._v(" "),v("li",[t._v("innerText 设置或获取位于元素标签内的文本")]),t._v(" "),v("li",[t._v("outerText 设置(包括标签)或获取(不包括标签)元素的文本")])]),t._v(" "),v("h3",{attrs:{id:"盒模型相关"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#盒模型相关"}},[t._v("#")]),t._v(" 盒模型相关")]),t._v(" "),v("ul",[v("li",[t._v("offsetTop: 当前元素离<定位父级>元素顶部的距离。")]),t._v(" "),v("li",[t._v("offsetLeft: 当前元素离<定位父级>元素左边的距离。")])]),t._v(" "),v("blockquote",[v("p",[t._v("以上两个属性如果没定位的父级，则相对于根元素html的距离")])]),t._v(" "),v("ul",[v("li",[t._v("offsetWidth: 当前元素的宽度（border + padding + content）")]),t._v(" "),v("li",[t._v("offsetHeight: 当前元素的高度（border + padding + content）")])]),t._v(" "),v("h3",{attrs:{id:"元素方法-适用所有的属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#元素方法-适用所有的属性"}},[t._v("#")]),t._v(" 元素方法(适用所有的属性)")]),t._v(" "),v("ul",[v("li",[t._v("ele.getAttribute(attr) //获取元素的属性值（自定义属性获取）")]),t._v(" "),v("li",[t._v("ele.setAttribute(attr,val); //设置元素的属性")]),t._v(" "),v("li",[t._v("ele.removeAttribute(attr) //删除属性attr")]),t._v(" "),v("li",[t._v("ele.hasAttribute(attr) //判断是否存在属性attr")])]),t._v(" "),v("h3",{attrs:{id:"根据元素关系获取其他元素"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#根据元素关系获取其他元素"}},[t._v("#")]),t._v(" 根据元素关系获取其他元素")]),t._v(" "),v("ul",[v("li",[t._v("parentElement 获取父级节点元素")]),t._v(" "),v("li",[t._v("children 获取元素的全部子元素")]),t._v(" "),v("li",[t._v("firstElementChild 获取第一个子元素")]),t._v(" "),v("li",[t._v("lastElementChild 获取最后一个子元素")]),t._v(" "),v("li",[t._v("previousElementSibling 获取前一个元素")]),t._v(" "),v("li",[t._v("nextElementSibling 获取下一个元素")])]),t._v(" "),v("h3",{attrs:{id:"获取css样式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#获取css样式"}},[t._v("#")]),t._v(" 获取css样式")]),t._v(" "),v("blockquote",[v("p",[t._v("得到当前元素计算后的所有样式")])]),t._v(" "),v("ul",[v("li",[t._v("getComputedStyle(ele,pseudo) （标准）\n"),v("ul",[v("li",[t._v("ele:要获取样式的元素")]),t._v(" "),v("li",[t._v("pseudo:伪元素样式字符(可选)，可获取伪元素样式")])])]),t._v(" "),v("li",[t._v("ele.currentStyle （IE8-）")])]),t._v(" "),v("h2",{attrs:{id:"table对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#table对象"}},[t._v("#")]),t._v(" table对象")]),t._v(" "),v("h3",{attrs:{id:"table对象属性-方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#table对象属性-方法"}},[t._v("#")]),t._v(" table对象属性&方法")]),t._v(" "),v("ul",[v("li",[t._v("rows 返回包含表格中所有行的一个数组")]),t._v(" "),v("li",[t._v("tBodies 返回包含表格中所有 tbody 的一个数组")]),t._v(" "),v("li",[t._v("insertRow(index) 在表格中插入一个新行。")]),t._v(" "),v("li",[t._v("deleteRow(index) 从表格删除一行。")])]),t._v(" "),v("h3",{attrs:{id:"tr对象属性-方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tr对象属性-方法"}},[t._v("#")]),t._v(" tr对象属性&方法")]),t._v(" "),v("ul",[v("li",[t._v("cells 返回包含表格中所有单元格的一个数组")]),t._v(" "),v("li",[t._v("rowIndex 返回该行在表中的位置")]),t._v(" "),v("li",[t._v("sectionRowIndex 返回在 tBody 、tHead 或 tFoot 中行的位置。")]),t._v(" "),v("li",[t._v("insertCell(index) 在一行中的指定位置插入一个空的列")]),t._v(" "),v("li",[t._v("deleteCell(index) 删除行中的指定的单元格")])]),t._v(" "),v("h3",{attrs:{id:"td-th对象属性-方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#td-th对象属性-方法"}},[t._v("#")]),t._v(" td/th对象属性&方法")]),t._v(" "),v("ul",[v("li",[t._v("cellIndex 返回单元格在表格行的单元格集合中的位置。")])]),t._v(" "),v("hr"),t._v(" "),v("p",[v("strong",[t._v("[练习]")])]),t._v(" "),v("ul",[v("li",[t._v("tab标签页切换")]),t._v(" "),v("li",[t._v("动态生成随机背景色表格")]),t._v(" "),v("li",[t._v("全选和反选效果")]),t._v(" "),v("li",[t._v("表格即时编辑")])]),t._v(" "),v("hr")])}],!1,null,null,null);e.default=l.exports}}]);